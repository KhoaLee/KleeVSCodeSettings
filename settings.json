{
  /*==================================================================================
	================================== VIM CONFIGURATION ===============================
	==================================================================================*/
  // Copy indent from current line when starting a new line
  "vim.autoindent": true,
  // Highlights all text matching current search
  "vim.hlsearch": true,
  // Ignore case in search patterns
  "vim.ignorecase": true,
  // Show the next match while entering a search
  "vim.scroll": 8,
  "vim.incsearch": true,
  "vim.leader": "<space>",
  "vim.sneak": true,
  "vim.showcmd": true,
  "vim.surround": true,
  "vim.easymotion": true,
  "vim.useCtrlKeys": true,
  "vim.useSystemClipboard": true,
  "vim.highlightedyank.enable": true,
  "vim.sneakUseIgnorecaseAndSmartcase": true,
  "vim.cursorStylePerMode.insert": "underline-thin",
  "vim.cursorStylePerMode.normal": "block-outline",
  "vim.cursorStylePerMode.replace": "block-outline",
  "vim.cursorStylePerMode.visual": "block-outline",
  "vim.cursorStylePerMode.visualblock": "line",
  "vim.cursorStylePerMode.visualline": "line",
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": ["<space>"],
      "commands": ["vspacecode.space"]
    },
    {
      "before": [","],
      "commands": [
        "vspacecode.space",
        {
          "command": "whichkey.triggerKey",
          "args": "m"
        }
      ]
    }
  ],
  "vim.visualModeKeyBindingsNonRecursive": [
    {
      "before": ["<space>"],
      "commands": ["vspacecode.space"]
    },
    {
      "before": [","],
      "commands": [
        "vspacecode.space",
        {
          "command": "whichkey.triggerKey",
          "args": "m"
        }
      ]
    },
    {
      "before": [">"],
      "commands": ["editor.action.indentLines"]
    },
    {
      "before": ["<"],
      "commands": ["editor.action.outdentLines"]
    }
  ],
  "vim.handleKeys": {
    "<C-a>": false,
    "<C-f>": false,
    // VS Code new marker @ next occurence
    "<C-c>": true
    // Cut
    // "<C-x>": false,
    // Paste
    // "<C-v>": false ,
    // "<C-z>": false,
    // "<C-y>": false
  },
  // TO IMPROVE VIM PERFORMANCE
  "extensions.experimental.affinity": {
    "vscodevim.vim": 1
  },
  /*====================================================================================================
       EXTENSION: ZOOMBAR CONFIGURATION
       Command: Open the Zoombar view (if available) using your extensionâ€™s command palette entry
    ====================================================================================================*/
  "zoombar.zoomUnit": 1,
  "zoombar.defaultZoom": 100,
  "zoombar.zoomUnitType": "multiplicative",
  /*
   * WORKBENCH - TREE & SIDEBAR SETTINGS
   */
  "workbench.tree.indent": 16,
  "workbench.tree.renderIndentGuides": "always",
  "workbench.tree.enableStickyScroll": false,
  "workbench.sideBar.location": "left",
  /*
   * WORKBENCH - MOTION & VISUAL EFFECTS
   */
  "workbench.reduceMotion": "on",
  "workbench.fontAliasing": "default",
  "workbench.list.smoothScrolling": true,
  "workbench.productIconTheme": "fluent-icons",
  "workbench.preferredDarkColorTheme": "Kanagawa Paper",
  "workbench.preferredHighContrastColorTheme": "Kanagawa Paper",
  /*
   * WORKBENCH - ACTIVITY BAR & LAYOUT CONTROL
   */
  "workbench.activityBar.location": "bottom",
  "workbench.layoutControl.enabled": true,
  /*
   * WORKBENCH - EDITOR GROUPS & TAB SETTINGS
   */
  "workbench.editor.enablePreview": false,
  "workbench.editor.closeEmptyGroups": true,
  "workbench.editor.closeOnFileDelete": false,
  "workbench.editor.limit.enabled": true,
  "workbench.editor.limit.perEditorGroup": true,
  "workbench.editor.tabSizing": "fixed",
  "workbench.editor.showTabs": "single",
  "workbench.editor.limit.value": 1,
  "workbench.editor.decorations.badges": true,
  "workbench.editor.decorations.colors": true,
  "workbench.editor.centeredLayoutAutoResize": true,
  "workbench.editor.labelFormat": "long",
  "workbench.editor.openPositioning": "right",
  "workbench.editorAssociations": {
    "*.ipynb": "jupyter-notebook"
  },
  "workbench.panel.showLabels": false,
  /*
   * BUILT-IN: EDITOR - FONT & LAYOUT
   */
  "editor.tabSize": 4,
  "editor.lineHeight": 1.5,
  "editor.letterSpacing": 1,
  "editor.fontFamily": "CommitMono Nerd Font Propo, 'CommitMono Nerd Font Propo', CommitMono Nerd Font Propo",
  "editor.fontSize": 12,
  "editor.fontWeight": "normal",
  "editor.fontLigatures": false,
  "editor.largeFileOptimizations": true,
  "editor.minimap.enabled": false,
  /*
   * BUILT-IN: EDITOR - WORD WRAP & SCROLLING
   */
  "editor.wordWrap": "on",
  "diffEditor.wordWrap": "on",
  "editor.wordWrapColumn": 160,
  "editor.smoothScrolling": true,
  "editor.cursorSmoothCaretAnimation": "on",
  /*
   * BUILT-IN: EDITOR - INLAY HINTS & SUGGESTIONS
   */
  "editor.inlayHints.enabled": "off",
  "editor.parameterHints.enabled": false, // disable parameter hints on typing function
  "editor.inlayHints.fontSize": 12,
  "editor.inlayHints.fontFamily": "CommitMono Nerd Font Propo",
  "editor.inlineSuggest.enabled": true,
  "editor.suggestSelection": "first",
  "editor.acceptSuggestionOnEnter": "on",
  "editor.quickSuggestions": {
    "comments": "on",
    "strings": "on",
    "other": "on"
  },
  /*
   * BUILT-IN: EDITOR - RENDERING & VISUALS
   */
  "editor.lineNumbers": "relative",
  "editor.renderLineHighlight": "all",
  "editor.renderWhitespace": "none",
  "editor.glyphMargin": false,
  "editor.copyWithSyntaxHighlighting": false,
  "editor.cursorBlinking": "solid",
  "editor.colorDecorators": false, // disable rendering color decorators
  "editor.codeLens": false, // disable displaying some action button above line of code
  "editor.links": false, // disable rendering underline indicating for links
  "editor.hideCursorInOverviewRuler": true,
  /*
   * BUILT-IN: EDITOR - GUIDES & FOLDING
   */
  "editor.foldingMaximumRegions": 10000,
  "editor.foldingImportsByDefault": true,
  "editor.guides.bracketPairsHorizontal": false,
  "editor.guides.highlightActiveBracketPair": false,
  "editor.bracketPairColorization.enabled": false,
  "editor.bracketPairColorization.independentColorPoolPerBracketType": false,
  /*
   * BUILT-IN: EDITOR - ACTIONS & BEHAVIOR
   */
  "editor.formatOnSave": true,
  "editor.codeActionsOnSave": {
    "source.fixAll": "explicit",
    "source.fixAll.eslint": "explicit",
    "source.organizeImports": "explicit"
  },
  "editor.suggestOnTriggerCharacters": false,
  "editor.snippetSuggestions": "inline",
  "editor.tabCompletion": "on",
  "editor.linkedEditing": true,
  "editor.cursorStyle": "block",
  "editor.accessibilitySupport": "off",
  "editor.codeLensFontFamily": "CommitMono Nerd Font Propo",
  /*
   * BUILT-IN: EDITOR - SCROLLBARS & STICKY SCROLL
   */
  "editor.scrollbar.horizontal": "hidden",
  "editor.scrollbar.vertical": "hidden",
  "editor.stickyScroll.enabled": false,
  /*
   * BUILT-IN: TOKEN COLOR CUSTOMIZATIONS
   */
  "editor.tokenColorCustomizations": {
    "[*Light*]": {
      "textMateRules": [
        {
          "scope": "ref.matchtext",
          "settings": {
            "foreground": "#000"
          }
        }
      ]
    },
    "[*Dark*]": {
      "textMateRules": [
        {
          "scope": "ref.matchtext",
          "settings": {
            "foreground": "#fff"
          }
        }
      ]
    },
    "textMateRules": []
  },
  "debug.terminal.clearBeforeReusing": true,
  "debug.showVariableTypes": true,
  "debug.inlineValues": "auto",
  "debug.console.wordWrap": true,
  "debug.console.fontFamily": "CommitMono Nerd Font Propo, 'CommitMono Nerd Font Propo', CommitMono Nerd Font Propo",
  "debug.console.fontSize": 12,
  /*
   * BUILT-IN: TERMINAL - GENERAL CONFIGURATION
   * Command: Open integrated terminal via "Terminal: Focus Integrated Terminal" (Cmd+`)
   */
  "terminal.integrated.fontSize": 12,
  "terminal.integrated.lineHeight": 1.5,
  "terminal.integrated.cursorWidth": 1,
  "terminal.integrated.letterSpacing": 1.4,
  "terminal.integrated.inheritEnv": true,
  "terminal.integrated.scrollback": 1000,
  "terminal.integrated.fontWeight": "normal",
  /*
   * BUILT-IN: TERMINAL - MACOS SPECIFIC CONFIGURATION
   * Command: Open external terminal via "Terminal: Open New External Terminal" (Cmd+Shift+C)
   */
  "terminal.external.osxExec": "ghostty.app",
  "terminal.integrated.detectLocale": "on",
  "terminal.integrated.allowChords": false,
  "terminal.integrated.customGlyphs": true,
  "terminal.integrated.unicodeVersion": "11",
  "terminal.integrated.cursorStyle": "block",
  "terminal.integrated.gpuAcceleration": "on",
  "terminal.integrated.smoothScrolling": true,
  "terminal.integrated.macOptionIsMeta": true,
  "terminal.integrated.defaultProfile.osx": null, // set to null to use fish shell on terminal
  "terminal.integrated.shellIntegration.enabled": true,
  "terminal.integrated.enablePersistentSessions": false,
  "terminal.integrated.tabs.defaultIcon": "terminal",
  "terminal.integrated.shellIntegration.decorationsEnabled": "both",
  "terminal.integrated.persistentSessionReviveProcess": "onExitAndWindowClose",
  "terminal.integrated.fontFamily": "CommitMono Nerd Font Propo, 'CommitMono Nerd Font Propo', CommitMono Nerd Font Propo",
  "terminal.integrated.stickyScroll.enabled": false,
  "terminal.integrated.allowMnemonics": false,
  /*
   * BUILT-IN: TERMINAL - MACOS TERMINAL PROFILES
   */
  "terminal.integrated.profiles.osx": {
    "fish": {
      "path": "/bin/fish",
      "args": [],
      "icon": "terminal-bash"
    },
    "zsh": {
      "path": "/bin/zsh",
      "args": ["-l", "-i"],
      "icon": "terminal-bash"
    }
  },
  /*
   * BUILT-IN: FILES CONFIGURATION
   */
  "files.autoSave": "afterDelay",
  "files.autoSaveDelay": 10000,
  "files.trimTrailingWhitespace": true,
  "files.insertFinalNewline": true,
  "files.associations": {
    "*.sqlbook": "sql",
    "*.ndjson": "jsonl",
    "*.dbclient-js": "javascript",
    "*.js": "javascript",
    ".env*": "dotenv",
    "*.scss": "postcss"
  },
  "files.watcherExclude": {
    ".env-*": true,
    "**/.env/**": true,
    "**/.venv/**": true,
    "**/.git/objects/**": true,
    "**/node_modules/**": true,
    "**/.git/subtree-cache/**": true
  },
  "files.exclude": {
    "*.sublime-*": true,
    "**/.DS_Store": true,
    "**/node_modules": true,
    "**/.git/objects/**": true
  },
  "files.enableTrash": true,
  /*
   * BUILT-IN: FILE EXPLORER CONFIGURATION
   */
  "explorer.confirmDelete": true,
  "explorer.confirmDragAndDrop": true,
  "explorer.compactFolders": false,
  "explorer.decorations.badges": false,
  /*
   * ####################################################################################
   * ################################# EXTENSIONS CONFIGURATION #########################
   * ####################################################################################
   */
  "custom-ui-style.electron": {
    "frame": false,
    "roundedCorners": true,
    "titleBarStyle": "hiddenInset",
    "trafficLightPosition": {
      "x": 8,
      "y": 8
    }
  },
  "custom-ui-style.font.sansSerif": "CommitMono Nerd Font Propo, -apple-system",
  "custom-ui-style.stylesheet": {
    ".notification-toast": "box-shadow: none !important",
    ".quick-input-widget.show-file-icons": "box-shadow: none !important",
    ".quick-input-widget": "top: 36vh !important",
    // ".quick-input-list .scrollbar": "display: none",
    // ".monaco-action-bar.quick-input-inline-action-bar": "display: none",
    ".editor-widget.find-widget": "box-shadow: none; border-radius: 4px",
    ".quick-input-titlebar": "background: #100B15 !important",
    // ".monaco-workbench .part.editor > .content .editor-group-container > .title.title-border-bottom:after": "display: none",
    ".monaco-scrollable-element > .shadow.top": "display: none",
    ".sidebar .title-label": "padding: 0 !important",
    ".sidebar": "border: none !important",
    ".monaco-workbench .monaco-list:not(.element-focused):focus:before": "outline: none !important",
    ".monaco-list-row.focused": "outline: none !important",
    ".monaco-editor .scroll-decoration": "display: none",
    // ".title-actions": "display: none !important",
    ".title.show-file-icons .label-container .monaco-icon-label.file-icon": "justify-content: start; padding: 0 !important",
    ".title .monaco-icon-label:after": "margin-right: 0",
    // ".monaco-workbench .part.editor > .content .editor-group-container > .title > .label-container > .title-label": "padding-left: 60px",
    // ".title .monaco-icon-label.file-icon": "margin: 0 60px",
    "div.part.sidebar.left > div.composite.title > div.title-label > h2": "padding-left: 72px"
  },
  /*
   * GIT CONFIGURATION
   */
  "git.decorations.enabled": false,
  "githubPullRequests.pullBranch": "never",
  "githubPullRequests.createOnPublishBranch": "never",
  "git.confirmSync": true,
  "git.autorefresh": false,
  "git.enableSmartCommit": true,
  "git.terminalGitEditor": true,
  "git-graph.dialog.rebase.launchInteractiveRebase": true,
  "git.ignoreRebaseWarning": false,
  /*
   * NOTEBOOK CONFIGURATION
   */
  "notebook.cellToolbarLocation": {
    "default": "right",
    "jupyter-notebook": "right"
  },
  "jupyter.askForKernelRestart": false,
  "notebook.breadcrumbs.showCodeCells": false,
  "notebook.output.fontFamily": "CommitMono Nerd Font Propo, 'CommitMono Nerd Font Propo', CommitMono Nerd Font Propo",
  /* AWS CONFIGURATION */
  "aws.samcli.location": "/usr/local/bin/sam",
  "aws.telemetry": false,
  /*
   * SEARCH CONFIGURATION
   */
  "search.exclude": {
    "**/env": true,
    "**/venv": true,
    "**/node_modules": true,
    "**/bower_components": true
  },
  "search.searchOnType": false,
  /*
   * SCM & BREADCRUMBS CONFIGURATION
   */
  "scm.inputFontSize": 11,
  "breadcrumbs.enabled": false,
  "scm.inputFontFamily": "CommitMono Nerd Font Propo, 'CommitMono Nerd Font Propo', CommitMono Nerd Font Propo",
  /*
   * WINDOW CONFIGURATION
   */
  "window.commandCenter": false,
  "window.customTitleBarVisibility": "never",
  "window.titleBarStyle": "native",
  "window.density.editorTabHeight": "compact",
  "window.confirmBeforeClose": "always",
  "window.newWindowProfile": "Default",
  /*
   * ACCESSABILITY CONFIGURATION
   */
  "accessibility.dimUnfocused.enabled": false,
  /*
   * REMOTE CONFIGURATION
   */
  "remote.autoForwardPorts": false,
  "database-client.autoSync": true,
  /*
   * MICS: MISCELLANEOUS CONFIGURATION
   */
  "telemetry.telemetryLevel": "off",
  "security.workspace.trust.untrustedFiles": "open",
  "application.shellEnvironmentResolutionTimeout": 120,
  "update.mode": "none",
  "dotenv.enableAutocloaking": false,
  /*
   * LANGUAGE CONFIGURATION
   */
  /*================================ HTML ================================*/
  "html.suggest.html5": true,
  "html.autoClosingTags": true,
  "html.format.wrapLineLength": 80,
  "html.format.indentInnerHtml": true,
  "html.format.indentHandlebars": true,
  "html.format.wrapAttributes": "force-expand-multiline",
  "[html]": {
    "editor.formatOnSave": true,
    "editor.linkedEditing": true,
    "editor.foldingStrategy": "auto",
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.codeActionsOnSave": {
      "source.fixAll": "explicit",
      "source.fixAll.eslint": "never"
    }
  },
  /*============================= JAVASCRIPT =============================*/
  "javascript.autoClosingTags": true,
  "[javascript][javascriptreact]": {
    "editor.formatOnSave": true,
    "editor.insertSpaces": true,
    "editor.detectIndentation": false,
    "editor.defaultFormatter": "dbaeumer.vscode-eslint",
    "editor.codeActionsOnSave": {
      "source.fixAll": "explicit",
      "source.fixAll.eslint": "explicit"
    },
    "editor.inlayHints.enabled": "off"
  },
  "javascript.format.semicolons": "insert",
  "javascript.suggest.enabled": true,
  "javascript.suggest.completeJSDocs": true,
  "javascript.suggest.jsdoc.generateReturns": true,
  "javascript.inlayHints.variableTypes.enabled": true,
  "javascript.inlayHints.parameterTypes.enabled": true,
  "javascript.inlayHints.parameterNames.enabled": "literals",
  "javascript.inlayHints.functionLikeReturnTypes.enabled": true,
  "javascript.inlayHints.propertyDeclarationTypes.enabled": true,
  "javascript.updateImportsOnFileMove.enabled": "always",
  /*============================= TYPESCRIPT =============================*/
  "[typescript]": {
    "editor.formatOnSave": true,
    "editor.insertSpaces": true,
    "editor.detectIndentation": false,
    "editor.defaultFormatter": "dbaeumer.vscode-eslint",
    "editor.codeActionsOnSave": {
      "source.fixAll": "explicit",
      "source.fixAll.eslint": "explicit"
    },
    "editor.inlayHints.enabled": "off"
  },
  "typescript.suggest.enabled": true,
  "typescript.autoClosingTags": true,
  "typescript.format.semicolons": "insert",
  "typescript.suggest.completeJSDocs": true,
  "typescript.suggest.jsdoc.generateReturns": true,
  "typescript.inlayHints.variableTypes.enabled": true,
  "typescript.inlayHints.parameterTypes.enabled": true,
  "typescript.inlayHints.parameterNames.enabled": "literals",
  "typescript.inlayHints.enumMemberValues.enabled": true,
  "typescript.updateImportsOnFileMove.enabled": "always",
  "typescript.inlayHints.functionLikeReturnTypes.enabled": true,
  "typescript.inlayHints.propertyDeclarationTypes.enabled": true,
  /*================================ JSON ================================*/
  "[json][jsonc]": {
    "editor.formatOnSave": true,
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  /*============================ CSS SCSS LESS ===========================*/
  "[css][scss][less]": {
    "editor.formatOnSave": true,
    "editor.foldingStrategy": "auto",
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.codeActionsOnSave": {
      "source.fixAll": "explicit",
      "source.fixAll.stylelint": "explicit"
    }
  },
  "css.enabledLanguages": ["html", "typescript"], // From HTML CSS Support extension
  "css.completion.completePropertyWithSemicolon": true,
  "scss.completion.completePropertyWithSemicolon": true,
  "less.completion.completePropertyWithSemicolon": true,
  "[dockerfile]": {
    "editor.defaultFormatter": "ms-azuretools.vscode-docker"
  },
  /*================================= ESLINT =============================*/
  "eslint.format.enable": true,
  "eslint.lintTask.enable": true,
  "eslint.run": "onSave",
  /*================================ STYLELINT ===========================*/
  // Disable VSCode's built-int linter (optional) from documentation of Stylelint plugin
  "css.validate": false,
  "less.validate": false,
  "scss.validate": false,
  "stylelint.enable": true,
  //Sets the Stylelint config option. Note that when this option is enabled, Stylelint doesn't load configuration files -> Set to null
  "stylelint.config": null,
  "stylelint.configFile": ".stylelintrc.json",
  "stylelint.validate": ["css", "scss", "postcss"],
  "[prisma]": {
    "editor.defaultFormatter": "Prisma.prisma"
  },
  "workbench.colorTheme": "Kanagawa Paper"
}
